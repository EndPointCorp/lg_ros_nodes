<launch>
    <param name="/viewport/left" value="640x480+0+0" />
    <param name="/viewport/center" value="640x480+640+0" />
    <param name="/viewport/right" value="640x480+1280+0" />
    <param name="/viewport/touchscreen" value="640x480+0+0" />

    <!-- Development static file server for the -->
    <node name="dev_webserver" pkg="lg_common" type="dev_webserver.py" />

    <!-- USCS for initial state -->
    <node name="test_uscs_service_node" pkg="lg_common" type="uscs_service.py" >
        <param name="initial_state_scene_url" value="http://127.0.0.1:8008/lg_common/webapps/uscs_messages/initial_state.json"/>
        <param name="on_online_state_scene_url" value="http://127.0.0.1:8008/lg_common/webapps/uscs_messages/on_online.json"/>
        <param name="on_offline_state_scene_url" value="http://127.0.0.1:8008/lg_common/webapps/uscs_messages/on_offline.json"/>
        <param name="on_active_state_scene_url" value="http://127.0.0.1:8008/lg_common/webapps/uscs_messages/on_active.json"/>
        <param name="on_inactive_state_scene_url" value="http://127.0.0.1:8008/lg_common/webapps/uscs_messages/on_inactive.json"/>
    </node>

    <!-- Lg offliner as a dep -->
    <node name="lg_offliner" pkg="lg_offliner" type="lg_offliner_starter.py">
        <param name="check_every_seconds_delay" value="1"/>
        <param name="socket_timeout" value="1"/>
        <param name="checks" value="['sleep 1','sleep 1','sleep 1']"/>  <!-- 0 returning command, as if online -->
        <param name="send_on_online" value="/appctl/mode:appctl_msg_defs/Mode-mode:value-tactile;/something/offline:appctl_msg_defs/Mode-mode:value-online_scene"/>
        <param name="send_on_offline" value="/appctl/mode:appctl_msg_defs/Mode-mode:value-offline;/something/offline:appctl_msg_defs/Mode-mode:value-offline_scene"/>
    </node>

    <!-- three adhoc browser pools -->
    <node name="adhoc_browser_pool_center" pkg="lg_common" type="adhoc_browser.py">
      <param name="viewport" value="center"/>
      <param name="extensions_root" value="/tmp/extensions/"/>
    </node>

    <node name="adhoc_browser_pool_right" pkg="lg_common" type="adhoc_browser.py">
      <param name="viewport" value="right"/>
      <param name="extensions_root" value="/tmp/extensions/"/>
    </node>

    <node name="adhoc_browser_pool_left" pkg="lg_common" type="adhoc_browser.py">
      <param name="viewport" value="left"/>
      <param name="extensions_root" value="/tmp/extensions/"/>
    </node>
    <!-- end of three adhoc browser pools -->
    <!-- TS adhoc browser pool-->
    <node name="adhoc_browser_pool_touchscreen" pkg="lg_common" type="adhoc_browser.py">
      <param name="viewport" value="touchscreen"/>
    </node>
    <node name="rosbridge" pkg="rosbridge_server" type="rosbridge_websocket" clear_params="true" respawn="true" respawn_delay="3"/>

    <!--REQUIRED PARAMS TEST -->
    <param name="test_key" value="test_value" />
    <!--State changer-->
    <node name="test_state_changer_node" pkg="lg_common" type="state_setter.py" />

    <!-- readiness node for handling preloading -->
    <node name="readiness_node" pkg="lg_common" type="readiness.py"/>
    <!-- end of readiness node -->

    <test test-name="test_lg_common_adhoc_browser_pool" pkg="lg_common" type="test_adhoc_browser.py" time-limit="1000.0"/>
    <test test-name="test_lg_common_adhoc_browser_pool_with_url_monitor" pkg="lg_common" type="test_adhoc_browser_url_monitor.py" time-limit="100.0"/>
    <test test-name="test_required_param" pkg="lg_common" type="required_param_test.py" />
    <test test-name="test_state_changer" pkg="lg_common" type="state_changer_test.py" />
    <test test-name="test_uscs_initial_state" pkg="lg_common" type="uscs_initial_state_adhoc_browser.py" />
    <test test-name="test_adhoc_browser_pool" pkg="lg_common" type="test_adhoc_browser_pool_rosbridge_params.py" time-limit="120.0" />
    <test test-name="test_lg_common_adhoc_browser_director_bridge" pkg="lg_common" type="test_adhoc_browser_director_bridge.py" />
    <test test-name="test_uscs_service" pkg="lg_common" type="uscs_service_test.py" />

</launch>
